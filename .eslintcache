[{"/home/ayush/Desktop/Clone/whatsappclone/src/index.js":"1","/home/ayush/Desktop/Clone/whatsappclone/src/App.js":"2","/home/ayush/Desktop/Clone/whatsappclone/src/reportWebVitals.js":"3","/home/ayush/Desktop/Clone/whatsappclone/src/Sidebar.js":"4","/home/ayush/Desktop/Clone/whatsappclone/src/SidebarChat.js":"5","/home/ayush/Desktop/Clone/whatsappclone/src/Chat.js":"6","/home/ayush/Desktop/Clone/whatsappclone/src/firebase.js":"7","/home/ayush/Desktop/Clone/whatsappclone/src/Login.js":"8","/home/ayush/Desktop/Clone/whatsappclone/src/reducer.js":"9","/home/ayush/Desktop/Clone/whatsappclone/src/StateProvider.js":"10","/home/ayush/Desktop/Clone/whatsappclone/src/HomeScreen.js":"11"},{"size":706,"mtime":1607091297977,"results":"12","hashOfConfig":"13"},{"size":890,"mtime":1607408077485,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1606801131971,"results":"15","hashOfConfig":"13"},{"size":4362,"mtime":1607619380404,"results":"16","hashOfConfig":"13"},{"size":1344,"mtime":1607429019140,"results":"17","hashOfConfig":"13"},{"size":6678,"mtime":1607619105187,"results":"18","hashOfConfig":"13"},{"size":664,"mtime":1607062353819,"results":"19","hashOfConfig":"13"},{"size":2101,"mtime":1607515912719,"results":"20","hashOfConfig":"13"},{"size":624,"mtime":1607427112156,"results":"21","hashOfConfig":"13"},{"size":371,"mtime":1607092044098,"results":"22","hashOfConfig":"13"},{"size":610,"mtime":1607177090485,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1j2ukif",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/ayush/Desktop/Clone/whatsappclone/src/index.js",[],["53","54"],"/home/ayush/Desktop/Clone/whatsappclone/src/App.js",["55","56"],"import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from './Login'\nimport { useStateValue } from \"./StateProvider\";\nimport HomeScreen from './HomeScreen'\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) :\n        (\n          <div className='app__body' >\n            <Router>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/groups/:groupId/:chatId\">\n                  <Chat />\n                </Route>\n                <Route path=\"/\">\n                 <HomeScreen />\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","/home/ayush/Desktop/Clone/whatsappclone/src/reportWebVitals.js",[],"/home/ayush/Desktop/Clone/whatsappclone/src/Sidebar.js",["57","58"],"import { Avatar, IconButton } from '@material-ui/core'\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\nimport ChatIcon from '@material-ui/icons/Chat'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined'\nimport React, { useState, useEffect } from 'react'\nimport './Sidebar.css'\nimport SidebarChat from './SidebarChat'\nimport db from './firebase'\nimport { useStateValue } from \"./StateProvider\";\nimport ClearIcon from '@material-ui/icons/Clear';\n\nfunction Sidebar() {\n\n    const [{ user, allUserDetails }, dispatch] = useStateValue();\n    const [input, setInput] = useState('');\n    const [found, setFound] = useState([]);\n    const [chats, setChats] = useState([]);\n\n    useEffect(() => {\n        console.log('sidebar', user, allUserDetails)\n        db.collection('userDetails')\n            .doc(user.email)\n            .collection('chats')\n            .onSnapshot(snapshot => setChats(snapshot.docs.map((doc) => ({\n                id: doc.id,\n                data: doc.data()\n            }))))\n\n    }, [])\n\n\n    const searchUser = (e) => {\n        setInput(e)\n        if (e === '') {\n            console.log('zero', e, chats)\n            clear()\n        }\n        else {\n            setFound((Object.keys(allUserDetails).map((allusers) => {\n                if (allusers.includes(e) && (user.email !== allUserDetails[allusers].email)) {\n                    let x = chats.find(function (u, i) {\n                        if (u.id === allusers) return true\n                        else return false\n                    })\n                    return (x ? null: allUserDetails[allusers] )\n                } else {\n                    return null\n                }\n            })).filter((data) => data != null))\n        }\n    }\n\n    const clear = () => {\n        console.log('called')\n        setFound([])\n        setInput('')\n    }\n\n\n    return (\n        <div className='sidebar' >\n            <div className='sidebar__header' >\n                <div className='sidebar__header1'>\n                    <Avatar src={user?.photoURL} />\n                    <div className='sidebar__headerInfo' >\n                        <h2>{user.displayName}</h2>\n                        <p>{user.email}</p>\n                    </div>\n                </div>\n                <div className='sidebar__headerRight' >\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n            <div className='sidebar__search' >\n                <div className='sidebar__searchContainer' >\n                    <SearchOutlinedIcon />\n                    <input\n                        value={input}\n                        placeholder='Search people by email'\n                        type='text'\n                        onInput={(e) => searchUser(e.target.value)}\n                        on\n                    />\n                    <IconButton>\n                        <ClearIcon onClick={clear} />\n                    </IconButton>\n\n                </div>\n            </div>\n            <div className='sidebar__chat' >\n                {/* <Render /> */}\n                {found.map((data) => (\n                    <SidebarChat\n                        key={data.email}\n                        id={data.email}\n                        name={data.displayName}\n                        iconUrl={data.photoURL}\n                    />\n                ))}\n                {chats.length > 0 ? chats.map(chat => (\n                    <SidebarChat\n                        key={chat.data.chatUser}\n                        id={chat.data.chatUser}\n                        name={allUserDetails[chat.data.chatUser].displayName}\n                        iconUrl={allUserDetails[chat.data.chatUser].photoURL}\n                        chatId={chat.data.chatId}\n                        lastMessage={chat.data.chatUser}\n                    />\n                )) : <div className='sidebar__noMessages'>\n                    <p>No messages yet!</p>\n                </div>}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","/home/ayush/Desktop/Clone/whatsappclone/src/SidebarChat.js",[],["59","60"],"/home/ayush/Desktop/Clone/whatsappclone/src/Chat.js",["61","62"],"import { Avatar } from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport './Chat.css'\nimport { IconButton } from '@material-ui/core'\nimport SearchOutlined from '@material-ui/icons/SearchOutlined'\nimport AttachFile from '@material-ui/icons/AttachFile'\nimport MoreVert from '@material-ui/icons/MoreVert'\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { useParams } from \"react-router-dom\";\nimport db from './firebase'\nimport { useStateValue } from \"./StateProvider\";\nimport firebase from 'firebase'\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\n\n\n\nfunction Chat() {\n\n    const [input, setInput] = useState('');\n    const { groupId, chatId } = useParams();\n    const [groupName, setGroupName] = useState('');\n    const [groupIcon, setGroupIcon] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n    const [chatUserId, setChatUserId] = useState(chatId);\n    const [showEmoji, setShowEmoji] = useState(false);\n\n    const togglemoji = () => {\n        setShowEmoji(!showEmoji)\n    }\n    const changeInput = (e) => {\n        let emoji = e.native;\n        setInput(input + emoji)\n        togglemoji()\n    }\n    useEffect(() => {\n        console.log(groupId, chatId, 'setid', chatUserId)\n        if (groupId) {\n            db.collection('userDetails')\n                .doc(groupId)\n                .onSnapshot(snapshot => {\n                    console.log(snapshot.data())\n                    setGroupName(snapshot.data().displayName)\n                    setGroupIcon(snapshot.data().photoURL)\n                    setChatUserId(chatId)\n                })\n\n            if (chatUserId !== 'undefined') {\n                console.log('chatId', chatId)\n                setChatUserId(chatId)\n                console.log('chatId found', typeof chatUserId)\n                console.log('chatId found', groupId)\n            }\n            else {\n                console.log('chatId not found', typeof chatUserId)\n            }\n        }\n    }, [groupId])\n\n    useEffect(() => {\n        console.log('inside get message', chatUserId)\n        db.collection('userChatings')\n            .doc(chatUserId)\n            .collection('messages')\n            .orderBy('timestamp', 'asc')\n            .onSnapshot(snapshot => setMessages(snapshot.docs.map((doc) => doc.data())))\n\n    }, [chatUserId])\n\n    const sendMessage = (e) => {\n        e.preventDefault()\n        console.log('youtyped', input)\n        if (chatUserId !== 'undefined') {\n            console.log('got chatId')\n            db.collection(\"userChatings\")\n                .doc(chatUserId)\n                .collection(\"messages\")\n                .add({\n                    userEmail: user.email,\n                    message: input,\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp()\n                })\n        }\n        else {\n\n            db.collection('userDetails')\n                .doc(groupId)\n                .collection('chats').doc(user.email).set({\n                    chatUser: user.email,\n                    chatId: user.email + groupId\n                })\n                .then(() => db.collection('userDetails')\n                    .doc(user.email)\n                    .collection('chats').doc(groupId).set({\n                        chatUser: groupId,\n                        chatId: user.email + groupId\n                    })\n                ).then(() => db.collection(\"userChatings\")\n                    .doc(user.email + groupId)\n                    .collection(\"messages\")\n                    .add({\n                        userEmail: user.email,\n                        message: input,\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n                    })\n\n                ).then(() => {\n                    setChatUserId(user.email + groupId)\n                    console.log('new chatid is to be created', user.email + groupId, chatUserId, chatId)\n\n                })\n\n\n        }\n        setInput('')\n    }\n    return (\n        <div className='chat' >\n            <div className='chat__header' >\n                <Avatar\n                    src={groupIcon} />\n                <div className='chat__headerInfo' >\n                    <h3>{groupName}</h3>\n                    {/* <p>{new Date(messages[0].timestamp?.toDate()).toUTCString()}</p> */}\n\n                </div>\n                <div className='chat__headerRight' >\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>\n            <div className='chat__body' >\n                {messages.map((message) => (\n                    <p className={`chat__message ${message.userEmail === user.email\n                        && \"chat__reciever\"}`}>\n                        <span className=\"chat__name\">{message.name}</span>\n                        {message.message}\n                        <span className=\"chat__timestamp\">\n                            {new Date(message.timestamp?.toDate()).toUTCString()}\n                        </span>\n                    </p>\n                ))}\n            </div>\n            <div className='chat__footer' >\n\n                {showEmoji ?\n                    <span style={styles.picker} >\n                        <Picker\n                            onSelect={changeInput}\n                            emojiTooltip={true}\n                            title=\"weChat\"\n                        />\n                    </span> : null}\n                <IconButton>\n                    <InsertEmoticonIcon onClick={togglemoji} />\n                </IconButton>\n\n\n                <form\n                    onSubmit={sendMessage}\n                >\n                    <input\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        placeholder=\"Type a message\"\n                        type=\"text\"\n                    />\n                    <button\n                        onClick={sendMessage}\n                        type=\"submit\">\n                        Send a message\n          </button>\n                </form>\n\n                <MicIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n\nconst styles = {\n    picker : {\n        position:'absolute',\n        bottom:100,\n        left:100\n    }\n}","/home/ayush/Desktop/Clone/whatsappclone/src/firebase.js",["63"],"import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyByb7AFaYx4o7XV8rB-6mYnpWPwOeiWWV4\",\n  authDomain: \"whatsappclone-dc909.firebaseapp.com\",\n  databaseURL: \"https://whatsappclone-dc909.firebaseio.com\",\n  projectId: \"whatsappclone-dc909\",\n  storageBucket: \"whatsappclone-dc909.appspot.com\",\n  messagingSenderId: \"173133280593\",\n  appId: \"1:173133280593:web:63b985d3a70bc8f5d0cf70\",\n  measurementId: \"G-XCTEQTX3DQ\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport {auth, provider};\nexport default db;","/home/ayush/Desktop/Clone/whatsappclone/src/Login.js",["64"],"import { Button } from '@material-ui/core'\nimport React from 'react'\nimport './Login.css'\nimport { auth, provider } from './firebase'\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from './reducer'\nimport db from './firebase'\n\nfunction Login() {\n    const [{ }, dispatch] = useStateValue();\n    let userDetails = {}\n\n    const signIn = () => {\n\n\n        auth.signInWithPopup(provider)\n            .then((result) => {\n                dispatch({\n                    type: actionTypes.SET_USER,\n                    user: result.user\n                })\n\n                db.collection('userDetails').doc(result.user.email).set({\n                    displayName: result.user.displayName,\n                    email: result.user.email,\n                    photoURL: result.user.photoURL\n                })\n                console.log('user detail', result.user)\n            })\n            .then(() => db.collection('userDetails')\n                .get()\n                .then(function (querySnapshot) {\n\n                    querySnapshot.forEach(function (doc) {\n                        // doc.data() is never undefined for query doc snapshots\n                        userDetails[doc.id] = doc.data()\n\n                    });\n                    console.log('then',userDetails)\n                }))\n            .then(() => dispatch({\n                type: actionTypes.SET_ALLUSERDETAILS,\n                allUserDetails: userDetails\n            }))\n            .catch((e) => alert(e.message))\n\n    }\n\n    return (\n        <div className='login' >\n            <div className='login__container' >\n                <img\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/765px-WhatsApp.svg.png\"\n                    alt=\"\"\n                />\n                <div className=\"login__text\">\n                    <h1>Sign in to WhatsApp</h1>\n                </div>\n\n                <Button type=\"submit\" onClick={signIn}>\n                    Sign In With Google\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","/home/ayush/Desktop/Clone/whatsappclone/src/reducer.js",[],"/home/ayush/Desktop/Clone/whatsappclone/src/StateProvider.js",[],"/home/ayush/Desktop/Clone/whatsappclone/src/HomeScreen.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":12,"column":20,"nodeType":"71","messageId":"72","endLine":12,"endColumn":28},{"ruleId":"69","severity":1,"message":"73","line":15,"column":38,"nodeType":"71","messageId":"72","endLine":15,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":30,"column":8,"nodeType":"76","endLine":30,"endColumn":10,"suggestions":"77"},{"ruleId":"65","replacedBy":"78"},{"ruleId":"67","replacedBy":"79"},{"ruleId":"69","severity":1,"message":"73","line":26,"column":22,"nodeType":"71","messageId":"72","endLine":26,"endColumn":30},{"ruleId":"74","severity":1,"message":"80","line":60,"column":8,"nodeType":"76","endLine":60,"endColumn":17,"suggestions":"81"},{"ruleId":"69","severity":1,"message":"82","line":14,"column":7,"nodeType":"71","messageId":"72","endLine":14,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":10,"column":12,"nodeType":"85","messageId":"86","endLine":10,"endColumn":15},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allUserDetails' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["89"],["87"],["88"],"React Hook useEffect has missing dependencies: 'chatId' and 'chatUserId'. Either include them or remove the dependency array.",["90"],"'firebaseApp' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [allUserDetails, user]",{"range":"95","text":"96"},"Update the dependencies array to be: [chatId, chatUserId, groupId]",{"range":"97","text":"98"},[1082,1084],"[allUserDetails, user]",[2122,2131],"[chatId, chatUserId, groupId]"]